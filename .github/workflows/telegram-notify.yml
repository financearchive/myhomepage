name: Smart Telegram Notification

on:
  push:
    branches: [ main, master ]
    paths: 
      - 'src/site/notes/**'

jobs:
  notify:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        fetch-depth: 2

    - name: Get changed files
      id: changed-files
      uses: tj-actions/changed-files@v39
      with:
        files: |
          src/site/notes/**

    - name: Process and send notification
      if: steps.changed-files.outputs.any_changed == 'true'
      run: |
        # 오늘 날짜 가져오기
        TODAY=$(date '+%Y-%m-%d')
        
        # 변경된 파일들 처리
        CHANGED_FILES="${{ steps.changed-files.outputs.all_changed_files }}"
        
        for file in $CHANGED_FILES; do
          if [[ $file == *.md ]]; then
            echo "Processing file: $file"
            
            # 파일 이름 추출 (확장자 제거)
            filename=$(basename "$file" .md)
            
            # 폴더 경로로 카테고리 판단
            if [[ $file == *"0.DAILY Invest"* ]]; then
              # 시황 분석
              TITLE="📊 오늘의 미국 주식 시장 시황($filename)"
              EMOJI="📈"
              CATEGORY="시황분석"
              
            elif [[ $file == *"2.개별종목"* ]]; then
              # 개별 종목 분석
              TITLE="🔍 개별종목 분석: $filename"
              EMOJI="📊"
              CATEGORY="종목분석"
              
            elif [[ $file == *"1.Study"* ]]; then
              # 산업 분석
              TITLE="🏭 산업 분석: $filename"
              EMOJI="⚡"
              CATEGORY="산업분석"
              
            else
              # 기타
              TITLE="📝 새 글 업데이트: $filename"
              EMOJI="📄"
              CATEGORY="기타"
            fi
            
            # 파일 내용에서 실제 제목 추출 (# 으로 시작하는 첫 번째 줄)
            CONTENT_TITLE=$(head -20 "$file" | grep -E "^# " | head -1 | sed 's/^# //' | sed 's/📊 //g' | sed 's/🔍 //g' | sed 's/🏭 //g' || echo "")
            
            # 파일 내용 요약 (처음 300자, 마크다운 제거)
            CONTENT_SUMMARY=$(head -15 "$file" | grep -v "^#" | grep -v "^---" | grep -v "^$" | head -5 | tr '\n' ' ' | sed 's/\*\*//g' | sed 's/\*//g' | cut -c1-300)
            
            # 메시지 구성
            MESSAGE="$EMOJI <b>$TITLE</b>
            
🔗 <a href=\"https://moneydiary.co.kr\">moneydiary.co.kr</a>
            
📋 <b>카테고리</b>: $CATEGORY"
            
            # 실제 제목이 있으면 추가
            if [[ -n "$CONTENT_TITLE" ]]; then
              MESSAGE="$MESSAGE
              
📌 <b>원문 제목</b>: $CONTENT_TITLE"
            fi
            
            # 요약 내용 추가
            if [[ -n "$CONTENT_SUMMARY" ]]; then
              MESSAGE="$MESSAGE
              
💭 <b>내용 요약</b>: 
${CONTENT_SUMMARY}..."
            fi
            
            MESSAGE="$MESSAGE
            
⏰ <i>업데이트: $(date '+%Y-%m-%d %H:%M:%S')</i>"
            
            # 텔레그램으로 전송
            curl -X POST "https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage" \
              -H "Content-Type: application/json" \
              -d "{
                \"chat_id\": \"${{ secrets.TELEGRAM_CHAT_ID }}\",
                \"text\": \"$MESSAGE\",
                \"parse_mode\": \"HTML\",
                \"disable_web_page_preview\": false
              }"
            
            # 각 파일마다 1초 대기 (연속 전송 방지)
            sleep 1
            
          fi
        done
